unit Classe.Comum.ControleEstoque;

interface

uses
  JvPanel, Classe.Functions, Data.DB, System.SysUtils,Classe.Conexao;

type
      TCrtlEstoque = class
      Private
    FPnlBtEstFisico: TJvPanel;
    FPnlBtEntradas: TJvPanel;
    FPnlBtCadProduto: TJvPanel;
    FPnlBtCadGerais: TJvPanel;
    FPnlBtSaidas: TJvPanel;
    FDSNF       : TDataSource;
    FDSNFI      : TDataSource;
    FDSENTRADA  : TDataSource;
    FDSENTRADAITEM : TDataSource;

    procedure SetPnlBtEstFisico(const Value: TJvPanel);
    procedure setPnlBtEntradas(const Value: TJvPanel);
    procedure setPnlBtCadProduto(const Value: TJvPanel);
    procedure setPnlBtCadGerais(const Value: TJvPanel);
    procedure setPnlBtSaidas(const Value: TJvPanel);

      Public
        constructor CreateObjTCrtlEstoque;
        destructor  DestroyObjTCrtlEstoque;
        procedure pCtrlPosicaopnlBt1(PnlFundo : TJvPanel;Pos : Integer);
        procedure pCtrlPosicaopnlBt2(PnlFundo : TJvPanel;Pos : Integer);
        procedure pCtrlPosicaopnlBt3(PnlFundo : TJvPanel;Pos : Integer);
        procedure pCtrlPosicaopnlBt4(PnlFundo : TJvPanel;Pos : Integer);
        procedure pCtrlPosicaopnlBt5(PnlFundo : TJvPanel;Pos : Integer);

        function fProcessaEntEstporNF : boolean;



       published
        property PnlBtEstFisico : TJvPanel read FPnlBtEstFisico         write SetPnlBtEstFisico;
        property PnlBtEntradas  : TJvPanel read FPnlBtEntradas          write setPnlBtEntradas;
        property PnlBtCadProduto: TJvPanel read FPnlBtCadProduto        write setPnlBtCadProduto;
        property PnlBtSaidas    : TJvPanel read FPnlBtSaidas            write setPnlBtSaidas;
        property PnlBtRelatorios: TJvPanel read FPnlBtCadGerais        write setPnlBtCadGerais;

      end;

implementation

uses
     UFrmModuloControleEstoque ;

{ TCrrlEstoque }

constructor TCrtlEstoque.CreateObjTCrtlEstoque;
begin
        SetPnlBtEstFisico(FrmModuloControleEstoque.PnlFundoBtsNavPosicaoFisica);
        setPnlBtEntradas(FrmModuloControleEstoque.PnlFundoBtsNavEntradas);
        setPnlBtCadProduto(FrmModuloControleEstoque.PnlFundoBtsNavCadProduto);
        setPnlBtSaidas(FrmModuloControleEstoque.PnlFundoBtsNavSaida);
        setPnlBtCadGerais(FrmModuloControleEstoque.PnlFundoBtsNavCadGerais);


        FDSNF           := DMPrincipal.DsTbNotaFiscalP;
        FDSNFI          := DMPrincipal.DsTbNotaFiscalItemP;
        FDSENTRADA      := DMPrincipal.DsTbMovimentacao;
        FDSENTRADAITEM  := DMPrincipal.DsTbMov_Produto;


        DMPrincipal.TbNotaFiscalP.Active := True;
        DMPrincipal.TbNotaFiscalItemP.Active := True;
        DMPrincipal.FDTbMovimentacao.Active := True;
        DMPrincipal.FDTbMov_Produto.Active := True;

end;

destructor TCrtlEstoque.DestroyObjTCrtlEstoque;
begin

end;

function TCrtlEstoque.fProcessaEntEstporNF: boolean;
var
        IDMov : Integer;
begin
        FDSNF.DataSet.Filtered := False;
        FDSNF.DataSet.Filter   := 'nf_procEstoque = 0';
        FDSNF.DataSet.Filtered := True;
        FDSNF.DataSet.First;

        while not FDSNF.DataSet.Eof do
        begin
               FDSENTRADA.DataSet.Insert;
               FDSENTRADA.DataSet.FieldByName('mov_tipo').AsString := FDSNF.DataSet.FieldByName('nf_tipoES').AsString;
               FDSENTRADA.DataSet.FieldByName('mov_datamov').AsDateTime := Now;
               FDSENTRADA.DataSet.FieldByName('mov_descricao').AsString := 'MOVIMENTAÇÃO DE ESTOQUE';
               FDSENTRADA.DataSet.FieldByName('mov_origem').Asstring := 'MÓDULO NF';
               FDSENTRADA.DataSet.FieldByName('nf_id').AsInteger := FDSNF.DataSet.FieldByName('nf_id').AsInteger;
               FDSENTRADA.DataSet.Post;
               FDSENTRADA.DataSet.First;
               IDMov := FDSENTRADA.DataSet.FieldByName('mov_id').AsInteger;

                while not FDSNFI.DataSet.Eof do
                begin
                       FDSENTRADAITEM.DataSet.Insert;
                       FDSENTRADAITEM.DataSet.FieldByName('prd_idproduto').AsInteger := IDMov;
                       FDSENTRADAITEM.DataSet.FieldByName('prd_idproduto').AsInteger := FDSNFI.DataSet.FieldByName('prd_idproduto').AsInteger;
                       FDSENTRADAITEM.DataSet.FieldByName('mp_qtdUnit').AsFloat :=  FDSNFI.DataSet.FieldByName('nfi_qtde').AsFloat;
                       FDSENTRADAITEM.DataSet.FieldByName('mp_precoCompra').AsFloat :=  FDSNFI.DataSet.FieldByName('nfi_vlrunit').AsFloat;
                       FDSENTRADAITEM.DataSet.FieldByName('mp_precoTotal').AsFloat :=  FDSNFI.DataSet.FieldByName('nfi_vlrtotal').AsFloat;
                       FDSENTRADAITEM.DataSet.Post;
                       FDSNFI.DataSet.Next;
                end;
                FDSNF.DataSet.FieldByName('nf_procEstoque').AsInteger := 1;
                FDSNF.DataSet.Post;
                FDSNF.DataSet.Next;
        end;

end;

procedure TCrtlEstoque.pCtrlPosicaopnlBt1(PnlFundo : TJvPanel;Pos : Integer);
begin
        FPnlBtEstFisico.Height    := PnlFundo.Height - 10;
        FPnlBtEstFisico.Left      := PnlFundo.Left+Pos;
        FPnlBtEstFisico.Top       := 5;
        pMakeRounded(FPnlBtEstFisico);
end;

procedure TCrtlEstoque.pCtrlPosicaopnlBt2(PnlFundo : TJvPanel;Pos : Integer);
begin
        FPnlBtEntradas.Height    := PnlFundo.Height - 10;
        FPnlBtEntradas.Left      := PnlFundo.Left+Pos;
        FPnlBtEntradas.Top       := 5;
        pMakeRounded(FPnlBtEntradas);
end;

procedure TCrtlEstoque.pCtrlPosicaopnlBt3(PnlFundo: TJvPanel; Pos: Integer);
begin
        FPnlBtCadProduto.Height    := PnlFundo.Height - 10;
        FPnlBtCadProduto.Left      := PnlFundo.Left+Pos;
        FPnlBtCadProduto.Top       := 5;
        pMakeRounded(FPnlBtCadProduto);
end;

procedure TCrtlEstoque.pCtrlPosicaopnlBt4(PnlFundo: TJvPanel; Pos: Integer);
begin
        FPnlBtSaidas.Height    := PnlFundo.Height - 10;
        FPnlBtSaidas.Left      := PnlFundo.Left+Pos;
        FPnlBtSaidas.Top       := 5;
        pMakeRounded(FPnlBtSaidas);
end;

procedure TCrtlEstoque.pCtrlPosicaopnlBt5(PnlFundo: TJvPanel; Pos: Integer);
begin
        FPnlBtCadGerais.Height    := PnlFundo.Height - 10;
        FPnlBtCadGerais.Left      := PnlFundo.Left+Pos;
        FPnlBtCadGerais.Top       := 5;
        pMakeRounded(FPnlBtCadGerais);
end;

procedure TCrtlEstoque.setPnlBtCadProduto(const Value: TJvPanel);
begin
  FPnlBtCadProduto := Value;
end;

procedure TCrtlEstoque.setPnlBtEntradas(const Value: TJvPanel);
begin
  FPnlBtEntradas := Value;
end;

procedure TCrtlEstoque.SetPnlBtEstFisico(const Value: TJvPanel);
begin
  FPnlBtEstFisico := Value;
end;

procedure TCrtlEstoque.setPnlBtCadGerais(const Value: TJvPanel);
begin
  FPnlBtCadGerais := Value;
end;

procedure TCrtlEstoque.setPnlBtSaidas(const Value: TJvPanel);
begin
  FPnlBtSaidas := Value;
end;

end.
